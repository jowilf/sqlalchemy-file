name: Test suite

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  tests:
    name: "Python ${{ matrix.python-version }}"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ "3.8", "3.9", "3.10","3.11" ]

    services:
      postgres:
        image: postgres:14-alpine
        env:
          POSTGRES_USER: username
          POSTGRES_PASSWORD: password
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

      mysql:
        image: mysql:8
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_USER: username
          MYSQL_PASSWORD: password
          MYSQL_DATABASE: test_db
        ports:
          - 3306:3306
        options: --health-cmd "mysqladmin ping" --health-interval 10s --health-timeout 5s --health-retries 10

      minio:
        image: minio/minio:edge-cicd
        env:
          MINIO_ROOT_USER: minioadmin
          MINIO_ROOT_PASSWORD: minioadmin
        ports:
          - 9000:9000


    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Dependencies
        run: pip install hatch
      - name: Lint
        run: hatch run test:lint
      - name: Test Local Storage provider & sqlite
        env:
          ENGINE: 'sqlite:///test.db?check_same_thread=False'
          STORAGE_PROVIDER: 'LOCAL'
          LOCAL_PATH: '/tmp/storage'
        run: hatch run test:run
      - name: Test Local Storage provider & postgresql
        env:
          ENGINE: 'postgresql+psycopg2://username:password@localhost:5432/test_db'
          STORAGE_PROVIDER: 'LOCAL'
          LOCAL_PATH: '/tmp/storage'
        run: hatch run test:run
      - name: Test Local Storage provider & mysql
        env:
          ENGINE: 'mysql+pymysql://username:password@localhost:3306/test_db'
          STORAGE_PROVIDER: 'LOCAL'
          LOCAL_PATH: '/tmp/storage'
        run: hatch run test:run
      - name: Test Minio Storage provider & sqlite memory
        env:
          ENGINE: 'sqlite:///:memory:?check_same_thread=False'
          STORAGE_PROVIDER: 'MINIO'
          MINIO_KEY: 'minioadmin'
          MINIO_SECRET: 'minioadmin'
          MINIO_HOST: 'localhost'
          MINIO_PORT: 9000
          MINIO_SECURE: false
        run: hatch run test:run
      - name: store coverage files
        uses: actions/upload-artifact@v3
        with:
          name: coverage
          path: .coverage*
          retention-days: 1
  coverage:
    needs:
      - tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"
          cache: "pip"
      - name: get coverage files
        uses: actions/download-artifact@v3
        with:
          name: coverage
      - name: Install Dependencies
        run: pip install hatch
      - name: Coverage Report
        run: hatch run cov:report
      - name: Upload coverage
        uses: codecov/codecov-action@v3
