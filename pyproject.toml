[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "sqlalchemy-file"
description = "SQLAlchemy-file is a SQLAlchemy extension for attaching files to SQLAlchemy model and uploading them to various storage."
readme = "README.md"
license = "MIT"
requires-python = ">=3.7"
keywords = ["sqlalchemy", "sqlmodel", "file-upload", "apache-libcloud"]
authors = [
    { name = "Jocelin Hounon", email = "hounonj@gmail.com" },
]
classifiers = [
    'Development Status :: 4 - Beta',
    "Framework :: AsyncIO",
    'Environment :: Web Environment',
    'Intended Audience :: Developers',
    "License :: OSI Approved :: MIT License",
    'Operating System :: OS Independent',
    'Programming Language :: Python',
    'Topic :: Software Development :: Libraries :: Python Modules',
    'Programming Language :: Python :: 3.7',
    'Programming Language :: Python :: 3.8',
    'Programming Language :: Python :: 3.9',
    'Programming Language :: Python :: 3.10',
    'Programming Language :: Python :: 3.11',
    "Topic :: Database",
    "Topic :: Database :: Database Engines/Servers",
]
dependencies = [
    "SQLAlchemy >=1.4, <1.5",
    "apache-libcloud >=3.6, <3.8",
]
dynamic = ["version"]

[project.urls]
Homepage = "https://jowilf.github.io/sqlalchemy-file"
Documentation = "https://jowilf.github.io/sqlalchemy-file"
Repository = "https://github.com/jowilf/sqlalchemy-file"
Changelog = "https://jowilf.github.io/sqlalchemy-file/changelog/"

[project.optional-dependencies]
test = [
    "pytest >=7.2.0, <7.3.0",
    "mypy ==0.991",
    "ruff ==0.0.215",
    "black ==22.12.0",
    "coverage >=7.0.0, <7.1.0",
    "fasteners ==0.18",
    "PyMySQL[rsa] >=1.0.2, <1.1.0",
    "psycopg2-binary >=2.9.5, <3.0.0",
    "Pillow >=9.4.0, <9.5.0",
    "sqlmodel ==0.0.8",
    "python-multipart ==0.0.5",
    "fastapi >=0.92, <0.93",
    "Flask >=2.2, <2.3",
    "Flask-SQLAlchemy >=3.0,<3.1"
]
doc = [
    "mkdocs-material >=9.0.0, <10.0.0",
    "mkdocstrings[python] >=0.19.0, <0.21.0"
]
dev = [
    "pre-commit >=2.20.0, <3.0.0",
    "uvicorn >=0.20.0, <0.21.0",
]

[tool.hatch.envs.default]
features = [
    "test",
    "dev"
]
[tool.hatch.envs.default.scripts]
format = [
    "ruff sqlalchemy_file tests docs_src --fix",
    "black ."
]

[tool.hatch.envs.test]
features = [
    "test",
]
[tool.hatch.envs.test.scripts]
lint = [
    "mypy sqlalchemy_file",
    "ruff sqlalchemy_file tests",
    "black . --check"
]
all = "coverage run -m pytest tests"
cov = [
    "coverage combine",
    "coverage report --show-missing",
    "coverage xml"
]

[tool.hatch.envs.docs]
features = [
    "doc",
]
[tool.hatch.envs.docs.scripts]
serve = "mkdocs serve -a localhost:8080"
build = "mkdocs build"
deploy = "mkdocs gh-deploy --force"

[tool.hatch.version]
path = "sqlalchemy_file/__init__.py"

[tool.coverage.report]
fail_under = 99
show_missing = true
exclude_lines = [
    "pragma: no cover",
    "if TYPE_CHECKING:",
]

[tool.coverage.run]
parallel = true
command_line = "-m pytest"
source = ["sqlalchemy_file", "tests"]

[tool.ruff]
select = [
    "E", # pycodestyle errors
    "W", # pycodestyle warnings
    "F", # pyflakes
    "I", # isort
    "C", # flake8-comprehensions
    "B", # flake8-bugbear
]
ignore = ["E501", "B904", "B008"]

[tool.ruff.isort]
known-third-party = ["sqlalchemy_file"]

[tool.mypy]
strict = true

[tool.hatch.build.targets.wheel]
[tool.hatch.build.targets.sdist]
include = ["sqlalchemy_file"]
